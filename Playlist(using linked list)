#include <iostream>
using namespace std;

struct song {
    string data;
    song* next;

    song(string x) : data(x), next(nullptr) {}
};

void insert(song*& head, string x) {
    song* nn = new song(x);
    nn->next = head;
    head = nn;
}

void print(song* head) {
    while (head != nullptr) {
        cout << head->data << endl;
        head = head->next;
    }
}

void delete_song(song*& head, string x) {
    if (head == nullptr) {
        return;
    }
    if (head->data == x) {
        song* temp = head;
        head = head->next;
        delete temp;
        return;
    }
    song* current = head;
    while (current->next != nullptr && current->next->data != x) {
        current = current->next;
    }
    if (current->next != nullptr && current->next->data == x) {
        song* temp = current->next;
        current->next = current->next->next;
        delete temp;
    }
}

int main() {
    int n;
    char ch;
    string x;
    song* head = nullptr;

    do {
        cout << "1. Enter the songs" << endl;
        cout << "2. Print the playlist" << endl;
        cout << "3. Delete the song from the list" << endl;
        cout << "Enter the operation number to be done: " << endl;
        cin >> n;

        switch(n) {
            case 1:
                cout << "Enter the number of songs: " << endl;
                cin >> n;
                for (int i = 0; i < n; i++) {
                    cout << "Enter the song name: " << endl;
                    cin >> x;
                    insert(head, x);
                }
                break;

            case 2:
                cout << "Songs in the list:" << endl;
                print(head);
                break;

            case 3:
                cout << "Enter the song name to be deleted: " << endl;
                cin >> x;
                delete_song(head, x);
                break;

            default:
                cout << "Invalid choice." << endl;
                break;
        }

        cout << "Do you want to continue? (y/n): ";
        cin >> ch;

    } while(ch == 'y' || ch == 'Y');

    return 0;
}
